load(final_RR_sensitive_upload.rdata)

outcomes <- c("All-cause","Respiratory","Infectious","Cardiovascular","Nervous","Diabetes", "Cancer", "Digestive","Renal") 



# Function to create plots for each outcome
create_plots2 <- function() {
  plot_list <- list()
  
  for (outcome1 in outcomes) {
    sub_df_mid <- result_RR %>% 
      filter(outcome == outcome1) 
    
    p <- ggplot(sub_df_mid, aes(x = group, y = RR,colour=group)) +
      geom_point(position = position_dodge(width = 0.5), size = 3) +  # Increase point size to 3.5
      geom_errorbar(aes(ymin = RRlow, ymax = RRhigh), 
                    width = 0.2, 
                    position = position_dodge(width = 0.5)) +
     
      ggtitle(outcome1) +
      xlab("") +
      ylab(ifelse(outcome1 %in% outcomes[c(2,3, 5,6, 8, 9)], "", "Relative Risk (95% CI)")) +
      #scale_shape_manual(values = shapes) +
      theme_bw() +
       scale_color_manual(values = c("main results" = "#D73027", "timedf8" = "#FC8D59", "timedf9" = "#FEE08B", 
                                    "RHdf4" = "#F46D43", "RHdf5" = "#D7301F", "Temdf3" = "#B30000", "Temdf5" = "#67000D")) +
  
      theme(
        text = element_text(size = 14, family = 'serif'),
        plot.title = element_text(size = 15, face = "bold", family = 'serif'),
        axis.text = element_text(size = 14, colour = "black", family = 'serif'),
         axis.title.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.y = element_text(size = 14, colour = "black", family = 'serif'),
        #axis.text.y = element_text(margin = margin(r = 0)),
        #panel.spacing = unit(0, "mm"),
        #strip.background = element_blank(),
        legend.text = element_text(size = 12, colour = "black", family = 'serif'),
        legend.title = element_text(size = 12, colour = "black", family = 'serif'),
        plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()
      ) +
      geom_hline(yintercept = 1, linetype = "dashed")+
      labs(colour="Group") 
    
    # Show legend only in the first plot
    if (outcome1 == outcomes[6]) {
      p <- p + theme(legend.position = "right")
    } else {
      p <- p + theme(legend.position = "none")
    }
    
    plot_list[[outcome1]] <- p
  }
  
  return(plot_list)
}


# Generate plots for different outcomes
plot_list <- create_plots2()

# Create the remaining plots


grid_plot <- (plot_list[[1]]|plot_list[[2]]| plot_list[[3]]) /
             (plot_list[[4]]|plot_list[[5]]| plot_list[[6]]) /
             (plot_list[[7]]|plot_list[[8]]| plot_list[[9]])

# Print the final combined plot
tiff("S:/MNHS-SPHPM-CARE/GLOBALENVIRONHealth/01Working folds/Shuang/Wildfire_child_morbidity/result/sensitive/RR01.tiff", width = 14, height = 10, units = "in", res = 300)
grid_plot
dev.off()
