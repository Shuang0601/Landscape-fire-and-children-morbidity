load("final_RR_agesex_adjusted_upload.rdata")


sub_df <- sub_df %>%
  mutate(outcome = recode(outcome, "All"="All-cause", "All_Resp"="Respiratory", "All_Infectious"="Infectious", "All_CVD"="Cardiovascular", "All_Nervous"="Neurological","All_Diabetes"="Diabetes", "All_Cancer"="Cancer", "All_Digestive"="Digestive", "All_Renal"="Renal"))

outcomes <- c("All-cause","Respiratory","Infectious","Cardiovascular","Neurological","Diabetes", "Cancer", "Digestive","Renal")

shapes <- c("overall" = 15, "0-4" = 16, "5-9" = 17,"10-19"=18,"female"=1,"male"=2)  


#### Figure 4####
# Function to create plots for each outcome
create_plots2 <- function() {
  plot_list <- list()
  
  for (outcome1 in outcomes) {
    sub_df_mid <- sub_df %>% 
      filter(outcome == outcome1) %>%
       mutate(signif = ifelse(P_fdr < 0.05&P_val< 0.05, "*ยง",
                              ifelse(P_fdr < 0.05&P_val> 0.05, "ยง",
                                     ifelse(P_fdr > 0.05&P_val< 0.05, "*",""))))
    
    p <- ggplot(sub_df_mid, aes(x = group, y = RR,shape=group)) +
      geom_point(position = position_dodge(width = 0.5), size = 3,color="#D9534F") +  # Increase point size to 3.5
      geom_text(aes(label = signif), vjust = -2.0, position = position_dodge(width = 0.5), size = 6, colour = "black") + # Add significance asterisks
      geom_errorbar(aes(ymin = RRlow, ymax = RRhigh), 
                    width = 0.2, 
                    position = position_dodge(width = 0.5),color="#D9534F") +
     
      ggtitle(outcome1) +
      xlab("") +
      ylab(ifelse(outcome1 %in% outcomes[c(2,3, 5,6, 8, 9)], "", "Relative Risk (95% CI)")) +
      scale_shape_manual(values = shapes) +
      theme_bw() +
      theme(
        text = element_text(size = 14, family = 'serif'),
        plot.title = element_text(size = 15, face = "bold", family = 'serif'),
        axis.text = element_text(size = 14, colour = "black", family = 'serif'),
        axis.title.x = element_text(size = 14, colour = "black", family = 'serif'),
        axis.title.y = element_text(size = 14, colour = "black", family = 'serif'),
        #axis.text.y = element_text(margin = margin(r = 0)),
        #panel.spacing = unit(0, "mm"),
        #strip.background = element_blank(),
        legend.text = element_text(size = 12, colour = "black", family = 'serif'),
        legend.title = element_text(size = 12, colour = "black", family = 'serif'),
        plot.background = element_blank(),
        panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),    
        axis.line = element_line(color = "black"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank()
      ) +
      geom_hline(yintercept = 1, linetype = "dashed")+
      labs(shape="Group") 
    
    # Show legend only in the first plot
    if (outcome1 == outcomes[6]) {
      p <- p + theme(legend.position = "right")
    } else {
      p <- p + theme(legend.position = "none")
    }
    
    plot_list[[outcome1]] <- p
  }
  
  return(plot_list)
}


# Generate plots for different outcomes
plot_list <- create_plots2()

# Create the remaining plots


grid_plot <- (plot_list[[1]]|plot_list[[2]]| plot_list[[3]]) /
             (plot_list[[4]]|plot_list[[5]]| plot_list[[6]]) /
             (plot_list[[7]]|plot_list[[8]]| plot_list[[9]])

# Print the final combined plot
tiff("agesexplot2.tiff", width = 14, height = 10, units = "in", res = 300)
grid_plot
dev.off()

